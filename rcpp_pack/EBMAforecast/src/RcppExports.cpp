// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// emLogit
Rcpp::List emLogit(Rcpp::NumericVector outcome, Rcpp::NumericMatrix prediction, Rcpp::NumericVector W, double tol, int maxIter, double wisdom);
RcppExport SEXP EBMAforecast_emLogit(SEXP outcomeSEXP, SEXP predictionSEXP, SEXP WSEXP, SEXP tolSEXP, SEXP maxIterSEXP, SEXP wisdomSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type outcome(outcomeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type prediction(predictionSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type W(WSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type wisdom(wisdomSEXP);
    __result = Rcpp::wrap(emLogit(outcome, prediction, W, tol, maxIter, wisdom));
    return __result;
END_RCPP
}
// oneMultinomCalt
IntegerVector oneMultinomCalt(NumericVector probs);
RcppExport SEXP EBMAforecast_oneMultinomCalt(SEXP probsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type probs(probsSEXP);
    __result = Rcpp::wrap(oneMultinomCalt(probs));
    return __result;
END_RCPP
}
// getRGamma
NumericVector getRGamma(double shape);
RcppExport SEXP EBMAforecast_getRGamma(SEXP shapeSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    __result = Rcpp::wrap(getRGamma(shape));
    return __result;
END_RCPP
}
// GibbsLogit
Rcpp::List GibbsLogit(Rcpp::NumericVector outcome, Rcpp::NumericMatrix prediction, Rcpp::NumericVector W, int iterations, int burnin, int thin);
RcppExport SEXP EBMAforecast_GibbsLogit(SEXP outcomeSEXP, SEXP predictionSEXP, SEXP WSEXP, SEXP iterationsSEXP, SEXP burninSEXP, SEXP thinSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type outcome(outcomeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type prediction(predictionSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    __result = Rcpp::wrap(GibbsLogit(outcome, prediction, W, iterations, burnin, thin));
    return __result;
END_RCPP
}
// emNorm
Rcpp::List emNorm(Rcpp::NumericVector outcome, Rcpp::NumericMatrix prediction, Rcpp::NumericMatrix RSQ, Rcpp::NumericVector W, double tol, int maxIter, double wisdom, double sigma2);
RcppExport SEXP EBMAforecast_emNorm(SEXP outcomeSEXP, SEXP predictionSEXP, SEXP RSQSEXP, SEXP WSEXP, SEXP tolSEXP, SEXP maxIterSEXP, SEXP wisdomSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type outcome(outcomeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type prediction(predictionSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type RSQ(RSQSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type W(WSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type wisdom(wisdomSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    __result = Rcpp::wrap(emNorm(outcome, prediction, RSQ, W, tol, maxIter, wisdom, sigma2));
    return __result;
END_RCPP
}
